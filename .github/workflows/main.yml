name: Build and Run Petclinic with Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up JDK (for Gradle build)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      # Step 3: Give permission to gradlew
      - name: Grant execute permission for Gradle
        run: chmod +x gradlew

      # Step 4: Build project with Gradle
      - name: Build with Gradle
        run: ./gradlew build -x test

      # Step 5: Set up Docker (with Buildx)
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Step 6: Log in to Docker Hub (if using private images)
      - name: Log in to Docker Hub
        if: secrets.DOCKER_USERNAME != '' && secrets.DOCKER_PASSWORD != ''
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 7: Pull Docker images
      - name: Pull Docker images
        run: docker compose -f docker-compose.yml pull

      # Step 8: Build & Run with Docker Compose
      - name: Build and Run containers
        run: docker compose -f docker-compose.yml up -d --build

      # Step 9: Check running containers
      - name: Check running services
        run: docker ps -a

      # Step 10: Test Spring Petclinic endpoint
      - name: Test Spring Petclinic endpoint
        run: |
          echo "‚è≥ Waiting for app to start..."
          sleep 40
          curl -f http://localhost:8080 || exit 1

      # Step 11: Cleanup (stop & remove containers, networks, volumes)
      - name: Cleanup Docker
        if: always()
        run: docker compose -f docker-compose.yml down -v
